---
name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE

jobs:
  Tests:
    runs-on: linux-gtk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir build
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            tests-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        run: cmake --preset integration
      - name: Compile tests and cli
        run: cmake --build --preset integration --parallel $(nproc)
      - name: Test
        run: ctest --preset integration

  Linux:
    runs-on: linux-gtk
    needs: Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            linux-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        run: cmake --preset package
      - name: Compile
        run: cmake --build --preset package --parallel $(nproc)
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-linux-continuous
          path: |
            build/pixelmapcli
            build/pixelmapim
      - name: Package binaries
        run: cpack --preset linux
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-linux-pkg
          compression-level: 0
          path: build/publish/*

  Windows:
    runs-on: windows-cross
    needs: Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            win-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        run: cmake --preset package
      - name: Compile
        run: cmake --build --preset package --parallel $(nproc)
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-win-continuous
          path: |
            build/pixelmapcli.exe
            build/pixelmapim.exe
      - name: Package binaries
        run: cpack --preset windows
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-win-pkg
          compression-level: 0
          path: build/publish/*

  Upload:
    runs-on: linux
    needs:
      - Linux
      - Windows
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: pixelmap-linux-pkg
          path: ./upload
      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: pixelmap-win-pkg
          path: ./upload
      - name: Release publicly
        uses: https://github.com/Dylan700/sftp-upload-action@latest
        with:
          server: ${{ vars.webserver }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          port: 22
          uploads: |
            ./upload/ => ${{ vars.web_path }}
