---
name: Build

on:
  push:
    branches:
      - main

jobs:
  Tests:
    runs-on: linux-gtk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir build
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            tests-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        working-directory: ./build
        run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DPIXELMAP_BUILD_GUI=OFF ..
      - name: Compile tests and cli
        working-directory: ./build
        run: make -j$(nproc) tests pixelmapcli
      - name: Test
        working-directory: ./build
        run: ctest --output-on-failure

  Linux:
    runs-on: linux-gtk
    needs: Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            linux-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        working-directory: ./build
        run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DPIXELMAP_BUILD_TESTS=OFF -DPIXELMAP_INSTALL=ON ..
      - name: Compile CLI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapcli
          strip pixelmapcli
      - name: Compile GUI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapim
          strip pixelmapim
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-linux-continuous
          path: |
            build/pixelmapcli
            build/pixelmapim
      - name: Package binaries
        working-directory: ./build
        run: cpack -G "DEB;RPM;ZIP" -D CPACK_COMPONENTS_ALL="cli;gui" -D CPACK_OUTPUT_FILE_PREFIX=publish
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-linux-pkg
          compression-level: 0
          path: |
            build/PixelMap-*.deb
            build/PixelMap-*.rpm
            build/PixelMap-*.zip
      - name: Upload publicly
        uses: https://github.com/Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.server }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          port: 22
          uploads: |
            ./build/publish/ => ${{ secrets.web_path }}

  Windows:
    runs-on: windows-cross
    needs: Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cache cmake
        uses: actions/cache@v4
        with:
          path: build
          key: >-
            win-${{
              hashFiles(
                'CMakeLists.txt',
                'library/**/CMakeLists.txt',
                'library/**/*.cmake',
                'cli/**/CMakeLists.txt',
                'cli/**/*.cmake',
                'gui/**/CMakeLists.txt',
                'gui/**/*.cmake'
              )
            }}
      - name: Cmake
        working-directory: ./build
        run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DPIXELMAP_BUILD_TESTS=OFF -DPIXELMAP_INSTALL=ON ..
      - name: Compile CLI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapcli
          strip pixelmapcli.exe
      - name: Compile GUI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapim
          strip pixelmapim.exe
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-win-continuous
          path: |
            build/pixelmapcli.exe
            build/pixelmapim.exe
      - name: Package binaries
        working-directory: ./build
        run: cpack -G "NSIS;ZIP" -D CPACK_COMPONENTS_ALL="cli;gui" -D CPACK_OUTPUT_FILE_PREFIX=publish
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-win-pkg
          compression-level: 0
          path: |
            build/PixelMap-*.exe
            build/PixelMap-*.zip
      - name: Upload publicly
        uses: https://github.com/Dylan700/sftp-upload-action@latest
        with:
          server: ${{ secrets.server }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          port: 22
          uploads: |
            ./build/publish/ => ${{ secrets.web_path }}
