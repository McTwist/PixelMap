---
name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version of the release
        type: string
        required: yes

jobs:
  Linux:
    runs-on: linux-gtk
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cmake
        working-directory: build
        run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DPIXELMAP_BUILD_TESTS=OFF -DPIXELMAP_INSTALL=ON ..
      - name: Compile CLI
        working-directory: build
        run: |
          make -j$(nproc) pixelmapcli
          strip pixelmapcli
      - name: Compile GUI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapim
          strip pixelmapim
      - name: Package binaries
        working-directory: ./build
        run: cpack -G "DEB;RPM;ZIP" -D CPACK_COMPONENTS_ALL="cli;gui" -D CPACK_OUTPUT_FILE_PREFIX=publish
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-linux-release
          compression-level: 0
          path: build/publish/*

  Windows:
    runs-on: windows-cross
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create build
        run: mkdir -p build/publish
      - name: Cmake
        working-directory: build
        run: cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DPIXELMAP_BUILD_TESTS=OFF -DPIXELMAP_INSTALL=ON ..
      - name: Compile CLI
        working-directory: build
        run: |
          make -j$(nproc) pixelmapcli
          strip pixelmapcli.exe
      - name: Compile GUI
        working-directory: ./build
        run: |
          make -j$(nproc) pixelmapim
          strip pixelmapim.exe
      - name: Package binaries
        working-directory: ./build
        run: cpack -G "NSIS;ZIP" -D CPACK_COMPONENTS_ALL="cli;gui" -D CPACK_OUTPUT_FILE_PREFIX=publish
      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: pixelmap-win-release
          compression-level: 0
          path: build/publish/*

  Release:
    runs-on: linux
    needs:
      - Linux
      - Windows
    steps:
      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: pixelmap-linux-release
          path: ./publish
      - name: Fetch artifacts
        uses: actions/download-artifact@v3
        with:
          name: pixelmap-win-release
          path: ./publish
      - name: Release publicly
        uses: https://github.com/Dylan700/sftp-upload-action@latest
        with:
          server: ${{ vars.webserver }}
          username: ${{ secrets.username }}
          key: ${{ secrets.key }}
          port: 22
          uploads: |
            ./publish/ => ${{ vars.release_path }}{{ inputs.version }}
